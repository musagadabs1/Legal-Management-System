@model LegalManagementSystem.Models.Dependant

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutProfile.cshtml";
}

<h2>Edit Dependant</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger">
            <span class="glyphicon glyphicon-remove-circle">@ViewBag.Error.ToString()</span>
        </div>
    }
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        <div class="col-md-6">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter First Name" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        
        <div class="col-md-6">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Last Name" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6">
            @Html.LabelFor(model => model.PolicyNumber, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.PolicyNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Policy Number like 010029" } })
            @Html.ValidationMessageFor(model => model.PolicyNumber, "", new { @class = "text-danger" })
        </div>

        
        <div class="col-md-6">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Gender, new SelectList(ViewBag.Gender, "Value", "Text"), "---Select Gender---", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6">
            @Html.LabelFor(model => model.EffectiveDate, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.EffectiveDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EffectiveDate, "", new { @class = "text-danger" })
        </div>
        
        <div class="col-md-6">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
        
        <div class="col-md-6">
            @Html.LabelFor(model => model.Relationship, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.Relationship, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Relationship" } })
            @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
        
        <div class="col-md-6">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <input type="submit" value="Update" class="btn btn-primary" />
        </div>
    </div>
</div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
