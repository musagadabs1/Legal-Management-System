@model LegalManagementSystem.Models.Document
@using LegalManagementSystem.Helpers
@{
    ViewBag.Title = "Edit Document";
}
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<div class="row">
    <div class="col-md-3">

    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Edit Document</h3>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Edit", "Documents", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @if (ViewBag.Error != null)
                        {
                            <span style="color:red;">@ViewBag.Error.ToString()</span>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.DocumentId)

                        <div class="form-group">
                            @Html.LabelFor(model => model.MatterNumber, "Case Number", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.MatterNumber, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control matterId", @id = "matterNumber" })
                                @Html.ValidationMessageFor(model => model.MatterNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelForRequired(model => model.DocName, "Document Name", htmlAttributes: new { @class = "control-label col-md-2", @placeholder = "Document Name" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DocName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DocName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.AssignedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.AssignedDate, "{0:MM/dd/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AssignedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelForRequired(model => model.DocPath, "Document Path", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="file" name="fileBase" id="fileBase" class="form-control" />
                                @Html.ValidationMessageFor(model => model.DocPath, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-2" style="margin-top:15px; margin-left:0px">
                                <button type="submit" class="btn btn-default">Update</button>
                            </div>
                            <div class="col-md-2">
                                <a href="@Url.Action("Index","Documents")" class="btn btn-primary">Cancel</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-3">

    </div>
</div>

<h2></h2>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/select2.min.js"></script>
<script>
    $(document).ready(function () {

        select2DropDown('matterNumber', '@Url.Action("GetMatterForDropDown", "Documents")', "Select Case");

    });


    function select2DropDown(elementId,url,placeholder) {
        $('#' + elementId).select2({
            placeholder: placeholder,
            //minimumInputLength:3,
            allowclear: true,
            theme: "classic",
            ajax: {
                url: url,
                datatype: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        searchKey: params.term
                    };
                },
                processResults: function (data,params) {
                    return {
                        results: data
                    };
                }
            }
        });
    }

</script>