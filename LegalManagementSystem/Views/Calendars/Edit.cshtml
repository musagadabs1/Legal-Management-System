@model LegalManagementSystem.Models.Calendar

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Calendar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger">
            <span class="glyphicon glyphicon-remove-circle">@ViewBag.Error.ToString()</span>
        </div>
    }
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MatterNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MatterNumber, (SelectList)ViewBag.Matter, "---Select Matter---", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MatterNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StaffId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StaffId, (SelectList)ViewBag.Staff, "---Select Staff---", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Locations, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Locations, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Locations, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MeetingType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MeetingType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MeetingType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
