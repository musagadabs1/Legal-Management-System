@model LegalManagementSystem.Models.Matter
@using LegalManagementSystem.Helpers
@{
    ViewBag.Title = "Create";
}
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<h2>Add new Matter</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-left:20px;">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.Error != null)
        {
            <span style="color:red;">@ViewBag.Error.ToString()</span>
        }
        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelForRequired(model => model.Subject, "Subject", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.MatterNumber, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.MatterNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatterNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.AreaOfPractice, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.StaffId, new SelectList(ViewBag.PracticeArea, "Value", "Text"), "---Select Practice Area---", htmlAttributes: new { @class = "form-control", @id = "practiceArea" })
                @Html.ValidationMessageFor(model => model.AreaOfPractice, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <div>
                    @Html.LabelForRequired(model => model.Assignee,"Select Assignees", htmlAttributes: new { @class = "control-label " })
                </div>
                <div>
                    @Html.DropDownListFor(model => model.Assignee, Enumerable.Empty<SelectListItem>() @*(SelectList)ViewBag.Staff*@, htmlAttributes: new { @class = "form-control", @id = "Assignee", multiple = "true" })
                    @Html.ValidationMessageFor(model => model.Assignee, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                <div>
                    @Html.LabelForRequired(model => model.ClientId, "Client Name", htmlAttributes: new { @class = "control-label " })
                </div>
                <div>
                    @Html.DropDownListFor(model => model.ClientId, Enumerable.Empty<SelectListItem>() @*(SelectList)ViewBag.Client*@, htmlAttributes: new { @class = "form-control ClientId", @id = "ClientId" })
                    @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div>
                    @Html.LabelForRequired(model => model.StaffId, "Assigned By", htmlAttributes: new { @class = "control-label " })
                </div>
                <div>

                    @Html.DropDownListFor(model => model.StaffId, Enumerable.Empty<SelectListItem>() @*(SelectList)ViewBag.LineManager*@, htmlAttributes: new { @class = "form-control staffId", @id = "LineMger" })
                    @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.ArrivalDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ArrivalDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ArrivalDate, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.FiledOn, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.FiledOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FiledOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelForRequired(model => model.Description, "Description", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label " })
                @Html.DropDownListFor(model => model.Priority, new SelectList(ViewBag.Priority, "Value", "Text"), "---Select Priority---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.MatterStage, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.MatterStage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatterStage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.RequestedBy, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.RequestedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestedBy, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.MatterValue, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.MatterValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatterValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.EstimatedEffort, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.EstimatedEffort, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstimatedEffort, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-primary" id="btnAdd" />
            </div>
        </div>
    </div>
}
<script src="~/Scripts/select2.min.js"></script>


<script>
    $(document).ready(function () {

        select2DropDown('ClientId', '@Url.Action("GetClientForDropDown", "Matters")', "Select Client");
        select2DropDown('Assignee', '@Url.Action("GetStaffForDropDown", "Matters")', "Select Advocate");
        select2DropDown('LineMger', '@Url.Action("GetLineManagerForDropDown", "Matters")', "Select Line Manager");
        
    });


    function select2DropDown(elementId,url,placeholder) {
        $('#' + elementId).select2({
            placeholder: placeholder,
            //minimumInputLength:3,
            allowclear: true,
            theme: "classic",
            ajax: {
                url: url,
                datatype: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        searchKey: params.term
                    };
                },
                processResults: function (data,params) {
                    return {
                        results: data
                    };
                }
            }
        });
    }
</script>


@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
