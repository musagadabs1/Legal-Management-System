@model LegalManagementSystem.Models.Matter

@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col-md-2">

    </div>
    <div class="col-md-8">
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Edit Case</h3>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal" style="margin:15px">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <div>
                                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                @Html.LabelFor(model => model.AreaOfPractice, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.AreaOfPractice, new SelectList(ViewBag.PracticeArea, "Value", "Text"), "---Select Practice Area---", htmlAttributes: new { @class = "form-control", @id = "practiceArea" })
                                @Html.ValidationMessageFor(model => model.AreaOfPractice, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                <div>
                                    @Html.LabelFor(model => model.ArrivalDate, htmlAttributes: new { @class = "control-label " })
                                </div>
                                @Html.TextBoxFor(model => model.ArrivalDate, "{0:MM/dd/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ArrivalDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                <div>
                                    @Html.LabelFor(model => model.FiledOn, htmlAttributes: new { @class = "control-label" })
                                </div>
                                @Html.TextBoxFor(model => model.FiledOn, "{0:MM/dd/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FiledOn, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                <div>
                                    @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label" })
                                </div>
                                @Html.TextBoxFor(model => model.DueDate, "{0:MM/dd/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.MatterNumber)

                        <div class="form-group">
                            <div>
                                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                @Html.LabelFor(model => model.MatterStage, htmlAttributes: new { @class = "control-label " })
                                @Html.DropDownListFor(model => model.MatterStage, new SelectList(ViewBag.Stage, "Value", "Text"), "---Select Case Stage---", htmlAttributes: new { @class = "form-control", @id = "caseStage" })
                                @Html.ValidationMessageFor(model => model.MatterStage, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                @Html.LabelFor(model => model.RequestedBy, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.RequestedBy, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RequestedBy, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                @Html.LabelFor(model => model.MatterValue, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.MatterValue, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MatterValue, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                @Html.LabelFor(model => model.EstimatedEffort, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.EstimatedEffort, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EstimatedEffort, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div>
                            <input type="hidden" id="txtBoxVal" />
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                <button type="submit" class="btn btn-info">Update</button>
                            </div>
                            <div class="col-md-4">
                                <a href="@Url.Action("Index","Matters")" class="btn btn-info">Cancel</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-2">

    </div>
</div>



@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
